<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.fusu.dao.StudentDao" >
  <resultMap id="BaseResultMap" type="org.fusu.domain.TStudent" >
    <id column="stu_id" property="stuId" jdbcType="INTEGER" />
    <result column="stu_number" property="stuNumber" jdbcType="VARCHAR" />
    <result column="stu_name" property="stuName" jdbcType="VARCHAR" />
    <result column="stu_sex" property="stuSex" jdbcType="TINYINT" />
    <result column="stu_phone" property="stuPhone" jdbcType="VARCHAR" />
    <result column="stu_class" property="stuClass" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    stu_id, stu_number, stu_name, stu_sex, stu_phone, stu_class
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.fusu.domain.TStudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_student
    where stu_id = #{stuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_student
    where stu_id = #{stuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.fusu.domain.TStudentExample" >
    delete from t_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.fusu.domain.TStudent" >
    insert into t_student (stu_id, stu_number, stu_name, 
      stu_sex, stu_phone, stu_class
      )
    values (#{stuId,jdbcType=INTEGER}, #{stuNumber,jdbcType=VARCHAR}, #{stuName,jdbcType=VARCHAR}, 
      #{stuSex,jdbcType=TINYINT}, #{stuPhone,jdbcType=VARCHAR}, #{stuClass,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.fusu.domain.TStudent" >
    insert into t_student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        stu_id,
      </if>
      <if test="stuNumber != null" >
        stu_number,
      </if>
      <if test="stuName != null" >
        stu_name,
      </if>
      <if test="stuSex != null" >
        stu_sex,
      </if>
      <if test="stuPhone != null" >
        stu_phone,
      </if>
      <if test="stuClass != null" >
        stu_class,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="stuNumber != null" >
        #{stuNumber,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null" >
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuSex != null" >
        #{stuSex,jdbcType=TINYINT},
      </if>
      <if test="stuPhone != null" >
        #{stuPhone,jdbcType=VARCHAR},
      </if>
      <if test="stuClass != null" >
        #{stuClass,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.fusu.domain.TStudentExample" resultType="java.lang.Integer" >
    select count(*) from t_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_student
    <set >
      <if test="record.stuId != null" >
        stu_id = #{record.stuId,jdbcType=INTEGER},
      </if>
      <if test="record.stuNumber != null" >
        stu_number = #{record.stuNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.stuName != null" >
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.stuSex != null" >
        stu_sex = #{record.stuSex,jdbcType=TINYINT},
      </if>
      <if test="record.stuPhone != null" >
        stu_phone = #{record.stuPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.stuClass != null" >
        stu_class = #{record.stuClass,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_student
    set stu_id = #{record.stuId,jdbcType=INTEGER},
      stu_number = #{record.stuNumber,jdbcType=VARCHAR},
      stu_name = #{record.stuName,jdbcType=VARCHAR},
      stu_sex = #{record.stuSex,jdbcType=TINYINT},
      stu_phone = #{record.stuPhone,jdbcType=VARCHAR},
      stu_class = #{record.stuClass,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.fusu.domain.TStudent" >
    update t_student
    <set >
      <if test="stuNumber != null" >
        stu_number = #{stuNumber,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null" >
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuSex != null" >
        stu_sex = #{stuSex,jdbcType=TINYINT},
      </if>
      <if test="stuPhone != null" >
        stu_phone = #{stuPhone,jdbcType=VARCHAR},
      </if>
      <if test="stuClass != null" >
        stu_class = #{stuClass,jdbcType=VARCHAR},
      </if>
    </set>
    where stu_id = #{stuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.fusu.domain.TStudent" >
    update t_student
    set stu_number = #{stuNumber,jdbcType=VARCHAR},
      stu_name = #{stuName,jdbcType=VARCHAR},
      stu_sex = #{stuSex,jdbcType=TINYINT},
      stu_phone = #{stuPhone,jdbcType=VARCHAR},
      stu_class = #{stuClass,jdbcType=VARCHAR}
    where stu_id = #{stuId,jdbcType=INTEGER}
  </update>
</mapper>